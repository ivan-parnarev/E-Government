version: "3.8"

services:

  postgres:
    container_name: e-gov-postgres
    build:
      context: ../../dev-env
      dockerfile: dockerfiles/postgres.Dockerfile
    image: postgres
    env_file:
      - ../docker.env
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  frontend:
    container_name: e-gov-react
    build:
      context: ../../frontend
      dockerfile: ../frontend/frontend.Dockerfile
    image: react
    ports:
      - "3000:3000"

  main:
    container_name: e-gov-spring-boot
    build:
      context: ../../main
      dockerfile: ../main/main.Dockerfile
    image: main
    env_file:
      - ../docker.env
    ports:
      - "8080:8080"

  access-control:
    container_name: e-gov-access-control
    build:
      context: ../../access-control
      dockerfile: ../access-control/access-control.Dockerfile
    image: access-control
    ports:
      - "8083:8083"

  auth:
    container_name: e-gov-auth
    build:
      context: ../../authentication
      dockerfile: ../authentication/authentication.Dockerfile
    image: auth
    ports:
      - "8082:8082"

  zookeeper:
    container_name: e-gov-zookeper
    image: confluentinc/cp-zookeeper:5.1.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: e-gov-kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

